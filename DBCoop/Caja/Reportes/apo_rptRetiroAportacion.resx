<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="XrPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAAEAlgCWAAD/4QB2RXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAABAAAAALAAAAABVTklDT0RFAABMAEUAQQBEACAAVABlAGMAaABuAG8AbABvAGcAaQBlAHMAIABJ
        AG4AYwAuACAAVgAxAC4AMAAxAAD//gAfTEVBRCBUZWNobm9sb2dpZXMgSW5jLiBWMS4wMQD/2wBDAAUF
        BQgFCAwHBwwMCQkJDA0MDAwMDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0N
        DQ3/2wBDAQUICAoHCgwHBwwNDAoMDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0N
        DQ0NDQ0NDQ0NDQ3/wAARCABYAO4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcI
        CQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2Jy
        ggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJ
        ipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP0
        9fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3
        AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNE
        RUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0
        tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD4yoop
        4QmgBlFS+UaaUxQAyil2mnBCaAGVKi5pwhNXoLY0AOt7UvW7b6M8v3Qa1NF03zWAxnOK9A03V/Dlkxiv
        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
</value>
  </data>
  <metadata name="DsCaja1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>